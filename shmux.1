.TH SHMUX 8 "2016-12-03"
.DA December 3, 2016
.SH NAME
shmux - Shell Multiplexor
.SH SYNOPSIS
.B shmux
[
.B -h
|
.B -V
]

.B shmux
[
.B -bBdFmpqQstv
] [
.B -C \fItimeout\fP
] [
.B -M \fImax\fP
] [
.B -r \fIrcmd\fP
] [
.B -S \fImode\fP
] [
.B -e \fIlist\fP
] [
.B -E \fIlist\fP
] [
.B -a \fIanalyzer\fP
] [
.B -A \fIcondition\fP
] [
.B -o \fIdir\fP
] [
.B -P \fItimeout\fP
] [
.B -T \fItimeout\fP
]
.B -c \fIcommand\fP
[ - | \fItargets...\fP ]

.SH DESCRIPTION
\fBshmux\fP is program for executing the same \fIcommand\fP on many hosts
in parallel.  For each target, a child process is spawned by \fBshmux\fP,
and a shell on the target obtained one of the supported methods: \fIrsh\fP,
\fIssh\fP, or \fIsh\fP.  The output produced by the children is received by
\fBshmux\fP and either (optionally) output in turn to the user, and/or
written to files for later processing.  The list of \fItargets\fP may
either be specified on the command line or be read from the standard input.

The default method may be set by using the \fB-r\fP option, and may be
overridden for any target by prefixing the target name by the method and a
colon.  Two special methods, \fIssh1\fP and \fIssh2\fP may be used to
select the SSH protocol version 1 or 2, respectively.  For the \fIsh\fP
method, it is up to the specified \fIcommand\fP to contact the target.  In
order for the executed \fIcommand\fP to know which target it is being
invoked for, the \fISHMUX_TARGET\fP environment variable is set by
\fBshmux\fP.

Before executing the specified \fIcommand\fP, \fBshmux\fP will optionally
ping each target to ensure that it can be reached, and/or run a dummy test
\fIcommand\fP to make sure that the target not only is alive, but that it
is possible to cleanly execute a command on it.  Both these tests are
typically run with a fairly short timeout to quickly dismiss unavailable
targets rather than waiting for the standard (longer) network timeout.

After executing the specified \fIcommand\fP, \fBshmux\fP will optionally
process the output or run a user specified command to determine whether the
\fIcommand\fP was successful or resulted in an error.  Optionally, the
\fIcommand\fP output is suppressed for successful targets.

Finally \fBshmux\fP will print out a summary of the results and list
targets with errors.

.SH OPTIONS
.IP "\fB-h\fP"
Display a brief help message.
.IP "\fB-V\fP"
Display the version information.
.IP "\fB-c \fIcommand\fP"
Specify the \fIcommand\fP to execute on targets.
.IP "\fB-C \fItimeout\fP"
Specify a timeout for the command being executed on targets.  This should
be a number followed by a time unit.  The following are valid time units:
s(econds), m(inutes), h(our), d(ays), w(eeks).  See the \fIPROCESS
MANAGEMENT\fP section for details on how this is handled.
.IP "\fB-M \fImax\fP"
Defines the maximum number of spawned processes.  While there is no real
(or hard coded) limitation for this, the system resources are typically
bounded and this affects \fBshmux\fP in turn.  The most critical resource
is the maximum number of open files a process may have.  But one should
also consider the load imposed on the system by the creation of a
(potentially) large number of processes.
.IP "\fB-r \fIrcmd\fP"
Defines the default method used to run a shell on targets.
.IP "\fB-S \fImode\fP"
This options defines the strategy used by \fBshmux\fP when spawning
children to run the \fIcommand\fP on targets.  If the \fImode\fP is set to
"all", then processes will be spawned as fast as possible.  When set to
"check", processes will be spawned as long as \fIcommand\fPs succeed.
Finally, the default \fImode\fP, "one", is to spawn only one process at
first, and wait for it to succeed, at which point \fBshmux\fP will switch
to the "check" mode.  In the "one" or "check" modes, when the \fIcommand\fP
fails on a target, \fBshmux\fP will stop spawning new processes.
.IP "\fB-F\fP"
When using either the "one" or "check" spawn modes (see \fB-S\fP),
\fBshmux\fP will stop spawning new processes if the \fIcommand\fP fails on
a target.  By default, \fBshmux\fP then waits for user input if available,
but reverts to spawning processes if such input cannot be obtained (because
the interactive mode is disabled, either via \fB-B\fP or lack of a
terminal).  Using the \fB-F\fP option changes this behaviour to force
\fBshmux\fP to quit once all existing processes have terminated after such
a failure.
.IP "\fB-e \fIlist\fP"
Defines which \fIcommand\fP exit codes should be considered errors and
reported as such.  The \fIlist\fP should be a comma separated list of
ranges of the form "x", "x-y", "x-" or "-y" where "x" and "y" are numbers
between 0 and 255.
.IP "\fB-E \fIlist\fP"
Defines which \fIcommand\fP exit codes should always be output to the
screen.  Codes that are considered errors (see the \fB-e\fP option) are
always shown, but by default, other exit codes are only shown if the
\fB-v\fP option is specified.  This allows more flexibility.
.IP "\fB-a \fIanalyzer\fP"
Defines how output should be analyzed by \fBshmux\fP after the
\fIcommand\fP completes on a target.  By default, nothing is done.  Valid
options are: \fIlnregex\fP, \fIlnpcre\fP, \fIregex\fP, \fIpcre\fP and
\fIrun\fP.  This option requires \fB-o\fP to be used as well.
.IP "\fB-A \fIcondition\fP"
When the \fB-a\fP option is used, it is also necessary to configure the
chosen analyzer.

For line based regular expressions (\fIlnregex\fP and \fIlnpcre\fP), the
\fB-A\fP option should be specified twice:  once for the standard output
and once for the standard error output.  In both cases, the argument should
be the name of a file containing a list of regular expressions, one per
line.  Each regular expression must be prefixed by the character '=' or '!'.
The output of the \fIcommand\fP is analyzed line per line by checking
whether it matches any of the specified regular expressions.  If the first
matching regular expression is prefixed by '=', then the \fIcommand\fP is
considered to be successful (so far).  Any other result (e.g. no match, or
a match prefixed by '!') indicates an error condition.  The default is to
consider standard output normal, and standard error output indicative of an
error.

For other regular expressions (\fIregex\fP and \fIpcre\fP), the \fB-A\fP
option should be specified twice: once for the standard output and once for
the standard error output.  This option allows defining the expression to
be applied to the output.  If the \fIcondition\fP starts with the character '='
then a match indicates that the \fIcommand\fP completed without error.
If the \fIcondition\fP starts with the character '!' then a failure to
match indicates that the \fIcommand\fP completed without error.  The second
character of the condition should either be '=' if the regular expression
follows or '<' if the regular expression should be read from the file which
name follows.  (The '=' characters may be omitted.)  A \fIcondition\fP must
be specified for the standard output, but is optional for standard error
output.  The default for the latter is to consider any output as indicative
of an error.

For the \fIrun\fP analyzer, the \fB-A\fP must be specified at least once
with the name of a program to run, and optionally a second time to specify
a timeout which defaults to 15 seconds if unset.  This timeout is
implemented using alarm(3) and will not otherwise be enforced by
\fBshmux\fP.  The program will be called after a \fIcommand\fP completes on
a target unless the \fIcommand\fP exit code is considered an error (see
\fB-e\fP) with two arguments: the target name and the directory specified
with the \fB-o\fP option.  The output of the program will always be shown
to the user.  Exit codes other than 0 indicate that the \fIcommand\fP
failed for the particular target.
.IP "\fB-o \fIdir\fP"
If specified, \fBshmux\fP will place the output and (for normal
terminations) the exit code of the executed commands in files under this
directory.  For each target, the files will be named after the target name
so as to make it easy to identify.  The files must not already exist, so it
is recommended that the directory be empty.  This also means that each
target must be unique.  The directory will be created if it does not
already exist.
.IP "\fB-p\fP"
Ping targets to verify they are alive before doing anything.  The target
names must be unique or bad things will happen.
.IP "\fB-P \fItimeout\fP"
Defines the initial target ping timeout in milliseconds, see
\fIfping(8)\fP.  (Implies \fB-p\fP.)
.IP "\fB-t\fP"
Before executing the specified \fIcommand\fP for a target, send a simple
"echo" test and verify that the output is correct.  This step goes beyond
the simple ping test as it verifies that it is possible to get a shell on
the target.  If this option is specified twice (or once when \fB-T\fP is
used), output for failed tests will be displayed to help the user
understand what went wrong.
.IP "\fB-T \fItimeout\fP"
Defines the test timeout in seconds.  (Implies \fB-t\fP.)
.IP "\fB-m\fP"
By default the output is displayed as soon as it is received.  For
multi-line outputs, this will typically result in output from several
targets being mixed.  This option may be used to keep each target output
separate.
.IP "\fB-b\fP"
Show the bare output from the executed commands instead of prefixing each
line by the corresponding target name.
.IP "\fB-B\fP"
Enables batch mode which forcefully disables the interactive mode, ignoring
input from the terminal.  See also \fB-s\fP and \fB-F\fP.
.IP "\fB-s\fP"
Suppress the progress status line.  See also \fB-B\fP.
.IP "\fB-q\fP"
Used once, this will suppress the output from successful targets (as
defined by the use of options options \fB-e\fP, \fB-a\fP and \fB-A\fP.  If
using the \fIrun\fP analyzer, the output of all targets is suppressed.
Note that using this option effectively implies \fB-m\fP in most cases as
failure is ultimately determined upon completion of the \fIcommand\fP.
(Only the \fIlnregex\fP and \fIlnpcre\fP analyzers are able to determine
errors while the \fIcommand\fP is running.)  When specified twice, this
option allows to completely suppress output from the \fIcommand\fP run on
targets.  This also changes the default spawn stategy to "all".  Using this
option (once or twice) requires using \fB-o\fP.
.IP "\fB-Q\fP"
Suppress the final summary of results.
.IP "\fB-v\fP"
Display internal status messages.
.IP "\fB-D\fP"
Display internal debug messages.

.SH EXIT CODES
\fBshmux\fP will optionally report the exit code of \fIthe command it
runs\fP for each target.  For the \fIsh\fP command, this will be the same
as the \fIcommand\fP itself, but this is the exception.  For other methods,
the exit code reported by \fBshmux\fP really is the code returned by the
program used to spawn \fIcommand\fP for that method.

In particular, \fIrsh\fP typically only returns either 0 or 1 while
different implementations of \fIssh\fP have different behaviours which may
include returning the actual exit code of the remotely executed command or
not.

.SH PROCESS MANAGEMENT
Children processes spawned by \fBshmux\fP are made process group leaders
(using setpgid(2)) in order to group all of their descendants in a single
process group which allows to easily send signals to all of these
processes.  This is especially useful for the \fIsh\fP method which can
generate many processes locally, but has no effect on remote processes.

\fBshmux\fP uses pipe(2) to capture the output generated by its children
(even when this output is redirected to a file with \fB-o\fP) and will read
from these until they are closed (by the child as well as its descendants,
if any).  Once there is nothing left to read, \fBshmux\fP will wait for the
child and its descendants to terminate before considering that particular
target done with.

The timeout is implemented by using alarm(3) which (unless canceled or
intercepted) will terminate the child process upon receipt but is not
inherited by descendants of that process.  For that reason, \fBshmux\fP
will send a SIGALRM signal to the child's process group when the child
itself terminates upon such signal.

After the scheduled SIGALRM time, \fBshmux\fP will wait an additional 5
seconds for all of the processes in the group to terminate to give the
child a chance to handle the timeout more gracefully if desired.  It will
then send a SIGTERM signal to the child's process group.  After another 5
seconds, if any process is still alive in the group, a final SIGKILL signal
is sent to the process group.

Note that only commands which terminate because of an ALRM signal or
because of a TERM or KILL signal after such signal has been issued by
\fBshmux\fP will be reported as having timed out in the final summary
report produced by \fBshmux\fP upon exiting.  This is not as accurate as it
should be.

.SH INTERACTIVE MODE
By default, \fBshmux\fP offers a minimal "interactive mode" while running:
it reads commands from the terminal and acts upon them accordingly.  This
can be disabled using the \fB-B\fP option.  The following commands are
currently recognized:

.IP "\fBq\fP"
Prevent \fBshmux\fP from spawning any more children, wen for active
children to complete, and then quit.
.IP "\fBQ\fP"
Quit immediately (e.g. abort), not waiting for any active children to
terminate.  This isn't recommended as children may be left running
unattended.  A better alternative is to press control-C which will be
received by \fBshmux\fP and all running children.  These will typically
abort, and \fBshmux\fP terminate in a cleaner fashion.
.IP "space"
Initiate a pause, this prevents \fBshmux\fP from spawning any more children
to do its work.  The following three commands may be used to resume work.
.IP "1"
This is equivalent to specifying "\fB-S\fP \fImore\fP" on the command line,
but may be used at any time.
.IP "return"
This is equivalent to specifying "\fB-S\fP \fIcheck\fP" on the command line,
but may be used at any time.
.IP "+"
This is equivalent to specifying "\fB-S\fP \fIall\fP" on the command line,
but may be used at any time.
.IP "F"
This toggles the failure mode for the "one" and "check" spawn modes (see
\fB-S\fP) between "pause" and "quit" (see \fB-F\fP).
.IP "\fBp\fP"
Display the list of pending targets.
.IP "\fBr\fP"
Display the list of targets for which a children process is currently
running.
.IP "\fBf\fP"
Display the list of targets for which \fBshmux\fP failed to run the
\fIcommand\fP.
.IP "\fBe\fP"
Display the list of targets for which the \fIcommand\fP completed with
error(s).
.IP "\fBs\fP"
Display the list of targets for which the \fIcommand\fP completed
successfully.
.IP "\fBa\fP"
Display the list of all targets with their status.
.IP "\fBk\fP"
Allows sending a signal to a target.
.IP "\fBv\fP"
Toggles whether internal messages are displayed or not.
.IP "\fBD\fP"
Toggles whether debug messages are displayed or not.

.SH ENVIRONMENT VARIABLES
\fBshmux\fP will use the following environment variables if set:

.IP SHMUX_MAX
Specifies the maximum number of processes to spawn simultaneously.  If the
\fB-M\fP option is specified, it overrides this variable.
.IP SHMUX_RCMD
Specifies the default command used to run a shell on targets.  If the
\fB-r\fP option is specified, it overrides this variable.
.IP SHMUX_SH
Specify the shell to use for targets using the \fIsh\fP method.  (Default
is "/bin/sh".)
.IP SHMUX_RSH
Specify an alternative command to "rsh" to use for targets using the
\fIrsh\fP method.
.IP "SHMUX_SSH, SHMUX_SSH1, SHMUX_SSH2"
Specify an alternative command to "ssh" to use for targets using the
\fIssh\fP, \fIssh1\fP and \fIssh2\fP method (respectively).  The variable
\fISHMUX_SSH\fP is used for all methods, but superseded by the other
specific variables.
.IP "SHMUX_SSH_OPTS, SHMUX_SSH1_OPTS, SHMUX_SSH2_OPTS"
The variables may be used to specify replace the default "-xa" options
passed to "ssh", "ssh1" and "ssh2" (respectively).  The variable
\fISHMUX_SSH_OPTS\fP is used for all methods, but superseded by the other
specific variables.

Multiple arguments may be supplied, using white-space characters to
separate them from each other.  You can use single- and/or double-quotes to
preserve white-spaces in an argument (but not backslashes).  Note that
doubling  a single-quote inside a single-quoted string gives you a
single-quote; likewise for double-quotes (though you  need  to  pay
attention  to which  quotes  your  shell  is parsing and which quotes
\fBshmux\fP is parsing).
.IP SHMUX_SPAWNMODE
Specifies the default spawn mode.  If the \fB-S\fP option is specified, it
overrides this variable.
.IP SHMUX_ERRORCODES
Specifies the default list of exit codes to be considered errors.  If the
\fB-e\fP option is specified, it overrides this variable.
.IP SHMUX_SHOWCODES
Specifies the default list of exit codes to be always display.  If the
\fB-E\fP option is specified, it overrides this variable.

.SH EXIT STATUS
The following exit values are returned:
.IP 0
indicates that \fBshmux\fP was able to complete its work.  However, this
does not mean that all targets successfully ran the \fIcommand\fP, nor that
\fBshmux\fP ran without any error.
.IP 1
indicates \fBshmux\fP was cleanly interrupted before it could finish its
work.
.IP 2
indicates \fBshmux\fP aborted upon user request, possibly leaving some
children running.
.IP 3
indicates \fBshmux\fP encountered a fatal error which caused it to abort,
possibly leaving some children running.
.IP 4
indicates a syntax error or a fatal error which caused \fBshmux\fP to abort
before it could spawn any children.

.SH SEE ALSO
.IR fping (8),
.IR sh (1),
.IR rsh (1),
.IR ssh (1),
.IR regex (3),
.IR pcre (3).

.SH AVAILABILITY
The latest official release of \fBshmux\fP is available on GitHub at
http://github.com/shmux.

.SH AUTHOR
Christophe Kalt <ck@taranis.org>

.SH BUGS
All \fIrsh\fP and some \fIssh\fP implementations effectively achieve user
authentication by using privileged ports.  Since there are only 1024 such
ports, there is an obvious limitation on how many connections may be open
using these programs.  To make matters worse such ports may be held for
four minutes (by default) as per the TCP specification.  When using
\fBshmux\fP, one can very quickly run out of privileged ports, at which
point failures will start happening.

All \fIrsh\fP and \fIssh\fP implementations fail to accurately return the
remote command exit code to the caller.  Typically, \fIrsh\fP will simply
not bother to return this exit code, and \fIssh\fP will try its best but is
limited by the fact it also tries to return an error code for SSH related
errors.  In either case, this may pose problems when using \fB-e\fP.

Under Cygwin, child processes do not inherit alarm(3) settings from the
parent disabling this simple timeout enforcement system used by \fBshmux\fP.

Some shells will ignore SIGALRM, others die upon its receipt (regardless of
any trap).  Again, this will affect the simple timeout enforcement system
used by \fBshmux\fP.

For bug reports, create an issue at https://github.com/shmux/shmux/issues,
or send an email to shmux-bugs@taranis.org.
