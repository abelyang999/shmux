.TH SHMUX 8 "$Date: 2002-07-10 23:57:07 $
.DA July 4, 2002
.SH NAME
shmux - Shell Multiplexor
.SH SYNOPSIS
.B shmux
[
.B -h
|
.B -V
]

.B shmux
[
.B -bdpqstv
] [
.B -C \fItimeout\fP
] [
.B -M \fImax\fP
] [
.B -r \fIrcmd\fP
] [
.B -o \fIdir\fP
] [
.B -P \fItimeout\fP
] [
.B -T \fItimeout\fP
]
.B -c \fIcommand\fP \fItargets...\fP

.SH DESCRIPTION
\fBshmux\fP is program for executing the same \fIcommand\fP on many hosts
in parallel.  For each target, a child process is spawned by \fBshmux\fP,
and a shell on the target obtained one of the supported methods: \fIrsh\fP,
\fIssh\fP, or \fIsh\fP.  The output produced by the children is received
by \fBshmux\fP and either output in turn to the user, or written to files
for later processing.

The default method may be set by using the \fB-r\fP option, and may be
overridden for any target by prefixing the target name by the method and a
colon.  Two special methods, \fIssh1\fP and \fIssh2\fP may be used to
select the SSH protocol version 1 or 2, respectively.  For the \fIsh\fP
method, it is up to the specified \fIcommand\fP to contact the target.  In
order for the executed \fIcommand\fP to know which target it is being
invoked for, the \fISHMUX_TARGET\fP environment variable is set by
\fBshmux\fP.

Before executing the specified \fIcommand\fP, \fBshmux\fP will optionally
ping each target to ensure that it can be reached, and/or run a dummy test
\fIcommand\fP to make sure that the target not only is alive, but that it
is possible to execute a \fIcommand\fP on it.  Both these tests are
typically run with a fairly short timeout to quickly dismiss unavailable
targets rather than waiting for the standard (longer) network timeout.

.SH OPTIONS
.IP "\fB-h\fP"
Display a brief help message.
.IP "\fB-V\fP"
Display the version information.
.IP "\fB-c \fIcommand\fP"
Specify the \fIcommand\fP to execute on targets.
.IP "\fB-C \fItimeout\fP"
Specify a timeout for the command being executed on targets.  This should
be a number followed by a time unit.  The following are valid time units:
s(econds), m(inutes), h(our), d(ays), w(eeks).
.IP "\fB-M \fImax\fP"
Defines the maximum number of spawned processes.  While there is no real
(or hard coded) limitation for this, the system resources are typically
bounded and this affects \fBshmux\fP in turn.  The most critical resource
is the maximum number of open files a process may have.  But one should
also consider the load imposed on the system by the creation of a
(potentially) large number of processes.
.IP "\fB-r \fIrcmd\fP"
Defines the default method used to run a shell on targets.
.IP "\fB-o \fIdir\fP"
If specified, the directory must already exist and \fBshmux\fP will place
the output of the executed commands in files under this directory.  For
each target, the files will be named after the target name so as to make it
easy to identify.  The files must not already exist, so it is recommended
that the directory be emtpy.  This also means that each target must be
unique.
.IP "\fB-p\fP"
Ping targets to verify they are alive before doing anything.  The target
names must be unique or bad things will happen.
.IP "\fB-P \fItimeout\fP"
Defines the initial target ping timeout in milliseconds, see
\fIfping(8)\fP.  (Implies \fB-p\fP.)
.IP "\fB-t\fP"
Before executing the specified \fIcommand\fP for a target, send a simple
echo test and verify that the output is correct.  This is a step above the
ping test as it verifies that it is possible to get a shell on the target.
If this option is specified twice (or once when \fB-T\fP is used), output
for failed tests will be displayed to help the user understand what went
wrong.
.IP "\fB-T \fItimeout\fP"
Defines the test timeout in seconds.  (Implies \fB-t\fP.)
.IP "\fB-b\fP"
Show the bare output from the executed commands instead of prefixing each
line by the corresponding target name.
.IP "\fB-q\fP"
Suppress the final summary of results.
.IP "\fB-s\fP"
Suppress the progress status line.
.IP "\fB-v\fP"
Display internal status messages.
.IP "\fB-D\fP"
Display internal debug messages.

.SH ENVIRONMENT
\fBshmux\fP will use the following environment variables if set:

.IP SHMUX_RCMD
Specifies the default command used to run a shell on targets.  If the
\fB-r\fP option is specified, it overrides this variable.
.IP SHMUX_SH
Specify the shell to use for targets using the \fIsh\fP method.  (Default
is "/bin/sh".)
.IP SHMUX_RSH
Specify an alternative command to "rsh" to use for targets using the
\fIrsh\fP method.
.IP "SHMUX_SSH, SHMUX_SSH1, SHMUX_SSH2"
Specify an alternative command to "ssh" to use for targets using the
\fIssh\fP, \fIssh1\fP and \fIssh2\fP method (respectively).  The variable
\fISHMUX_SSH\fP is used for all methods, but superseded by the other
specific variables.
.IP "SHMUX_SSH_OPTS, SHMUX_SSH1_OPTS, SHMUX_SSH2_OPTS"
The variables may be used to specify replace the default "-xa" options
passed to "ssh", "ssh1" and "ssh2" (respectively).  The variable
\fISHMUX_SSH_OPTS\fP is used for all methods, but superseded by the other
specific variables.

The supplied string is passed as one argument and is therefore not suitable
to pass a complex serie of options.  However, it can be used to suppress
the default, and or add options such as "-4", "-6", or even "-v".  It is
recommended to avoid using these variables in favor of tuning the ssh
configuration file(s).

.SH SEE ALSO
.IR fping (8),
.IR sh (1),
.IR rsh (1),
.IR ssh (1).

.SH AVAILABILITY
The latest official release of \fBshmux\fP is available on the web.
The home page is http://web.taranis.org/shmux/

.SH AUTHOR
Christophe Kalt <kalt@taranis.org>

.SH BUGS
All \fIrsh\fP and some \fIssh\fP implementations effectively achieve user
authentication by using privileged ports.  Since there are only 1024 such
ports, there is an obvious limitation on how many connections may be open
using these programs.  To make matters worse, a number of implementations
do not properly close such network connections when exiting, leading to the
port being kept open until a timeout kicks in.  When using \fBshmux\fP, one
can very quickly run out of privileged ports, at which point failures will
start happening.
